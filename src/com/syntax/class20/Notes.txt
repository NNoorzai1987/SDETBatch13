What is Inheritance:
    is a mechanism in java through which one class acquires the properties and methods of
    another class. it is one of the main four pillars of OOPS
Why we should use Inheritance:
    1) it helps reduce the amount of code that we have to write.
    2) it is more efficient.
    3) Saves memory.
How we can use Inheritance:
    we can use the extends keyword after the class name and then the name of the class
    from which we want to inherit the code. Example is given below.
class Parent{
String name="Newton";
String eyeColor="brown";
}
class Child extends Parent{

public void printInfo(){
System.out.println(name+" "+eyeColor);
}
}

Types of Inheritance:
    Different languages support different types of inheritances but 5 are very common.
    1) Single Inheritance.
    2) multilevel Inheritance.
    3) hierarchical Inheritance.
    4) multiple Inheritance.
    5) Hybrid Inheritance.
1) Single Inheritance:
                                                                                ارث چیست:
    مکانیزمی در جاوا است که از طریق آن یک کلاس ویژگی ها و روش های آن را به دست می آورد
    کلاس دیگر یکی از چهار رکن اصلی OOPS است
چرا باید از وراثت استفاده کنیم:
    1) به کاهش مقدار کدی که باید بنویسیم کمک می کند.
    2) کارآمدتر است.
    3) حافظه را ذخیره می کند.
چگونه می توانیم از وراثت استفاده کنیم:
    می توانیم از کلمه کلیدی extensions بعد از نام کلاس و سپس نام کلاس استفاده کنیم
    که می خواهیم کد را از آن به ارث ببریم. مثال در زیر آورده شده است.
والد کلاس {
نام رشته = "نیوتن";
String eyeColor = "قهوه ای";
}
class Child گسترش پدر و مادر {

public void printInfo () {
System.out.println (نام + "" + eyeColor)؛
}
}

انواع ارث:
    زبان های مختلف انواع مختلفی از ارث را پشتیبانی می کنند، اما 5 زبان بسیار رایج هستند.
    1) ارث مجرد.
    2) وراثت چند سطحی.
    3) وراثت سلسله مراتبی.
    4) ارث چندگانه.
    5) وراثت ترکیبی.
1) وراثت مجرد:

